# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  run-python:
    strategy:
      matrix:
        distro: ['fedora:latest', 'fedora:rawhide', 'opensuse:latest', 'ubuntu:latest', 'ubuntu:devel', 'ubuntu:rolling', 'fedora:intel']
        toolchain: [gnu, clang]
        cmake_build_type: [Release, Debug]
        minimal: [false]
        own_gmx: [false]
        module_build: [false]
        coverage: [false]
        deploy: [false]
        include:
          - distro: 'fedora:latest'
            toolchain: gnu
            cmake_build_type: Release
            minimal: false
            own_gmx: false
            module_build: false
            coverage: false
            # make sure there is only one build deploying
            deploy: true
          - distro: 'fedora:nogmx'
            toolchain: gnu
            cmake_build_type: Release
            minimal: true
          - distro: 'fedora:nogmx'
            toolchain: clang
            cmake_build_type: Release
            minimal: true
          - distro: 'fedora:nogmx'
            toolchain: gnu
            cmake_build_type: Release
            own_gmx: true
          - distro: 'fedora:latest'
            toolchain: gnu
            cmake_build_type: Release
            minimal: false
            own_gmx: false
            module_build: true
            coverage: false
            deploy: false
          - distro: 'fedora:intel'
            toolchain: intel
            cmake_build_type: Release
          - distro: 'fedora:intel'
            toolchain: intel
            cmake_build_type: Debug
          - distro: 'fedora:intel'
            toolchain: intel-oneapi
            cmake_build_type: Release
          - distro: 'fedora:intel'
            toolchain: intel-oneapi
            cmake_build_type: Debug
          - distro: 'fedora:gmx2019'
            toolchain: gnu
            cmake_build_type: Release
          - distro: 'fedora:gmx2019'
            toolchain: clang
            cmake_build_type: Release
          - distro: 'fedora:gmx2019_d'
            toolchain: gnu
            cmake_build_type: Release
          - distro: 'fedora:gmx2019_d'
            toolchain: clang
            cmake_build_type: Release
          - distro: 'fedora:gmx2021'
            toolchain: gnu
            cmake_build_type: Release
          - distro: 'fedora:gmx2021'
            toolchain: clang
            cmake_build_type: Release
          - distro: 'fedora:gmx2021_d'
            toolchain: gnu
            cmake_build_type: Release
          - distro: 'fedora:gmx2021_d'
            toolchain: clang
            cmake_build_type: Release
          - distro: 'fedora:gmx9999'
            toolchain: gnu
            cmake_build_type: Release
            continue-on-error: true
          - distro: 'fedora:gmx9999'
            toolchain: clang
            cmake_build_type: Release
            continue-on-error: true
          - distro: 'fedora:gmx9999_d'
            toolchain: gnu
            cmake_build_type: Release
            continue-on-error: true
          - distro: 'fedora:gmx9999_d'
            toolchain: clang
            cmake_build_type: Release
            continue-on-error: true
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/votca/buildenv/${{ matrix.distro }}
        # https://bugzilla.redhat.com/show_bug.cgi?id=1900021
      options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: export
        run: export
      - name: lscpu
        run: lscpu
      - name: "test with: python3 test.py"
        run: python3 test.py
      - name: "test with: ./test.py"
        run: ./test.py
